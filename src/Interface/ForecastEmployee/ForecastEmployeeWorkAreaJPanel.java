/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.ForecastEmployee;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.ForecastOrganization;
import Business.Organization.Organization;
import static Business.Organization.Organization.AnalystType.ForecastOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AnalysisWorkRequest;
import Business.WorkQueue.StateBodyWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 *
 */
public class ForecastEmployeeWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ForecastEmployeeWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private ForecastOrganization forecastorganization;
    private Enterprise enterprise;
    private EcoSystem business;
    
    public ForecastEmployeeWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise) {
         initComponents();
         this.userProcessContainer = userProcessContainer;
         this.account = account;
         this.forecastorganization = (ForecastOrganization)organization;
         this.enterprise = enterprise;  
         populateForecastTable();
         
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void populateForecastTable(){
        DefaultTableModel model = (DefaultTableModel)forecastjTable.getModel();
        model.setRowCount(0);
        for(WorkRequest request : forecastorganization.getWorkQueue().getForecastWorkRequests()){
            Object[] row = new Object[6];
            row[0] = request;
            row[1] = request.getWaterLevel();
            row[2] = ((AnalysisWorkRequest) request).getStateSender();
            row[3] = ((AnalysisWorkRequest) request).getForecastReceiver();
//            row[2] = request.getCentralReceiver()== null ? null : request.getCentralReceiver().getEmployee().getName();
            row[4] = ((AnalysisWorkRequest) request).getForecast();
            row[5]=  request.getStatus();
            model.addRow(row);
        }
    }
    
    
    public static int randInt(int min, int max) {
       Random rand = new Random();
       int randomNum = rand.nextInt((max - min) + 1) + min;
       return randomNum;
   }
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        forecastjTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        assigntoMejButton = new javax.swing.JButton();
        checkForecastjButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        forecastjTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Water Status", "Water Level", "State Sender", "Forecast Receiver", "Rain in mm", "Request Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(forecastjTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 51, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Forecast Employee Work Area :");

        assigntoMejButton.setBackground(new java.awt.Color(0, 102, 153));
        assigntoMejButton.setForeground(new java.awt.Color(255, 255, 255));
        assigntoMejButton.setText("Assign to me");
        assigntoMejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assigntoMejButtonActionPerformed(evt);
            }
        });

        checkForecastjButton.setBackground(new java.awt.Color(0, 102, 153));
        checkForecastjButton.setForeground(new java.awt.Color(255, 255, 255));
        checkForecastjButton.setText("Check Forecast");
        checkForecastjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkForecastjButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 968, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(assigntoMejButton)
                        .addGap(676, 676, 676)
                        .addComponent(checkForecastjButton)))
                .addContainerGap(57, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(58, 58, 58)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assigntoMejButton)
                    .addComponent(checkForecastjButton))
                .addContainerGap(462, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assigntoMejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assigntoMejButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = forecastjTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the above table", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        AnalysisWorkRequest request = (AnalysisWorkRequest) forecastjTable.getValueAt(selectedRow, 0);
        if (request.getStatus().equalsIgnoreCase("closed")) {
            JOptionPane.showMessageDialog(null, "This Request is already closed", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else {
            request.setForecastReceiver(account);
            request.setStatus("Received By Forecast Team");
            populateForecastTable();
        }

    }//GEN-LAST:event_assigntoMejButtonActionPerformed

    private void checkForecastjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkForecastjButtonActionPerformed
        // TODO add your handling code here:

        int selectedRow = forecastjTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the above table", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        AnalysisWorkRequest request = (AnalysisWorkRequest) forecastjTable.getValueAt(selectedRow, 0);

        if ((request.getForecastReceiver() == null) || !(request.getForecastReceiver().getUsername().equals(account.getUsername()))) {
            JOptionPane.showMessageDialog(null, "The request is not assigned to your name!!\nPlease assign it first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else if (request.getStatus().equalsIgnoreCase("closed")) {
            JOptionPane.showMessageDialog(null, "This Request is already closed", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else if (request.getStatus().equalsIgnoreCase("Forecast Generated") || request.getStatus().equalsIgnoreCase("Analysis Done")) {
            JOptionPane.showMessageDialog(null, "Forecast has already been generated for this request", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        } else{
            request.setStatus("Forecast Generated");
            if(request.getSensorLocation().equalsIgnoreCase("Boston")) {
            request.setForecast(randInt(20, 100));
            } else if (request.getSensorLocation().equalsIgnoreCase("Chicago")) {
            request.setForecast(randInt(10, 90));    
            } else if (request.getSensorLocation().equalsIgnoreCase("New York City")) {
            request.setForecast(randInt(30, 110));    
            } else if (request.getSensorLocation().equalsIgnoreCase("Washington DC")) {
            request.setForecast(randInt(20, 75));    
            } else if (request.getSensorLocation().equalsIgnoreCase("San Fransisco")) {
            request.setForecast(randInt(25, 120));    
            }
            
            populateForecastTable();
            JOptionPane.showMessageDialog(null, "Forecast Generated", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_checkForecastjButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton assigntoMejButton;
    private javax.swing.JButton checkForecastjButton;
    private javax.swing.JTable forecastjTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
